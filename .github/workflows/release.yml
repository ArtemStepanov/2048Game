name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Replace version in csproj
        run: |
          sed -i "s|<Version>.*</Version>|<Version>${{ github.event.inputs.version }}</Version>|" src/2048Game/2048Game.csproj
          sed -i "s|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>${{ github.event.inputs.version }}</AssemblyVersion>|" src/2048Game/2048Game.csproj
          sed -i "s|<FileVersion>.*</FileVersion>|<FileVersion>${{ github.event.inputs.version }}</FileVersion>|" src/2048Game/2048Game.csproj

      - name: Commit and Tag changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add src/2048Game/2048Game.csproj
          git commit -m "Update version to ${{ github.event.inputs.version }}"
          git tag v${{ github.event.inputs.version }}
          git push origin HEAD:${{ github.ref }}
          git push origin v${{ github.event.inputs.version }}

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Quick tests run
        run: dotnet test --configuration Release --no-restore

      - name: Publish
        run: dotnet publish src/2048Game/2048Game.csproj --configuration Release --no-restore --output ./output

      - name: Create release artifact (zip)
        run: |
          zip -r 2048Game.zip ./output

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./2048Game.zip
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body_path: ${{ github.workspace }}/releases/release-notes-${{ github.event.inputs.version }}.md
