name: Create Release

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        run: gitversion /output buildserver

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Replace version in csproj
        run: |
          version=${{ steps.gitversion.outputs['GitVersion.FullSemVer'] }}
          echo "Determined version: $version"
          sed -i "s|<Version>.*</Version>|<Version>$version</Version>|" src/2048Game/2048Game.csproj
          sed -i "s|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>$version</AssemblyVersion>|" src/2048Game/2048Game.csproj
          sed -i "s|<FileVersion>.*</FileVersion>|<FileVersion>$version</FileVersion>|" src/2048Game/2048Game.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Quick tests run
        run: dotnet test --configuration Release --no-restore

      - name: Publish
        run: dotnet publish --configuration Release --no-restore --output ./output

      - name: Create release artifact (zip)
        run: |
          zip -r 2048Game.zip ./output

      # - name: Create release artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: 2048Game
      #     path: ./output

      # - name: Create Tag
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     version=${{ steps.gitversion.outputs.FullSemVer }}
      #     git tag v$version
      #     git push origin v$version

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./2048Game.zip
          tag_name: v${{ steps.gitversion.outputs['GitVersion.FullSemVer'] }}
          name: Release ${{ steps.gitversion.outputs['GitVersion.FullSemVer'] }}
          body_path: ${{ github.workspace }}/release-notes.md
