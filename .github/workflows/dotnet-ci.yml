name: Build & Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - feature/**
      - hotfix/**
      - release/**

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --no-restore -c Release -v minimal --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=coverage/
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:tests/2048Game.Tests/coverage/coverage.cobertura.xml -targetdir:coverage/report -reporttypes:Html

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.16.1
        if: failure() || success()
        with:
          files: ./**/*.trx

      - name: Deploy to GitHub Pages
        if: startsWith(github.ref, 'refs/heads/main')
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage/report
          destination_dir: coverage

      - name: Upload coverage reports to Codecov
        if: startsWith(github.ref, 'refs/heads/main')
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: tests/2048Game.Tests/coverage/coverage.cobertura.xml
          flags: unittests
          name: codecov-umbrella
