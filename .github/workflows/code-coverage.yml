name: Code Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ vars.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

  test-and-coverage:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ vars.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Run tests with coverage
      run: dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

    - name: Setup report generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      env:
        DOTNET_ROOT: /usr/share/dotnet
        PATH: $PATH:/home/runner/.dotnet/tools

    - name: Generate coverage report
      run: reportgenerator -reports:tests/**/coverage.opencover.xml -targetdir:coverage -reporttypes:Html
      env:
        DOTNET_ROOT: /usr/share/dotnet
        PATH: $PATH:/home/runner/.dotnet/tools

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coverage
